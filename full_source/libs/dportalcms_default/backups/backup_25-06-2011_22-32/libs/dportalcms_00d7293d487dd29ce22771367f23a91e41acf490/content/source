<h1>C&oacute;digo fuente del proyecto.</h1> <p>Debido a que a&uacute;n est&aacute; en desarrollo y no tengo como empaquetar los Scripts, mostrar&eacute; ac&aacute; el c&oacute;digo fuente los Scripts m&aacute;s relevantes del CMS. Recuerda que este c&oacute;digo est&aacute; en proceso de depuraci&oacute;n y no garantizo nada si es utilizado con fines que no sean de desarrollo.</p> <h3>A la fecha 20/08/09</h3> <h3>P&aacute;ginas de contenido:</h3> <strong>/index.php</strong> <div class="code">   <p>&nbsp;</p><p>    // Inicia la Sesion<br />     session_start();<br />     <br />     define('DPORTAL',true);<br />     <br />     // Obtiene el archivo de Configuracion<br />     require_once('config/config.php');<br />     <br />     // Obtiene la seccion por GET<br />     $get_section = $_GET['seccion'];<br />     <br />     // Comprueba si el Archivo de contenido existe y si es leible. Si no, es HOME<br />     if(file_exists(&quot;content/$get_section&quot;)&amp;&amp;isset($get_section)){<br />     <br />     // Activa la Cache de Smarty a &quot;cache per template&quot;<br />     $smarty-&gt;caching = true;<br />     <br />     // Declara la variable de la Seccion<br />     $section = $get_section;<br />     <br />     // Obtiene la Lista de archivos<br />     $getlist = getlist($section);<br />     <br />     // Declara el Titulo y Exclusivo para la Funcion siguiente<br />     $title = $getlist['title'];<br />     $exclusive = $getlist['exclusive'];<br />     $timestamp = $getlist['timestamp'];<br />     <br />     // Obtiene el Contenido<br />     getcontent($section,$title,$exclusive,$timestamp);<br />     <br />     // Si la solicitud es incorrecta, redirigir a Home (o poner un Error)<br />     }elseif(!isset($_GET['section'])){<br />     header('HTTP/1.1 307 Redirection');<br />     header('location:index.php?seccion=home');<br />     }else{<br />     header('HTTP/1.0 404 Not found');<br />     $getsidebar = getsidebar();<br />     get404($section);<br />     $smarty-&gt;display('404.tpl');<br />     die();<br />     }<br />     <br />     // Si en la URL aparece un guion bajo '_', reemplazarla por una barra '/'<br />     // y agregar un estado HTTP de Redireccion (solo si mod_rewrite esta activado)<br />     //$url = $_SERVER['REQUEST_URI'];<br />     //if(strpos($url,'_')) header('Location:'.str_replace('_','/',$url),TRUE,301);<br />     <br />     // Declara las variables externas de Smarty<br />     $smarty-&gt;assign('SECTION',$section);<br />     $smarty-&gt;assign('EDITABLE',TRUE);<br />     <br />     // Las salidas<br />     $smarty-&gt;caching = 2;$smarty-&gt;cache_lifetime = 262800;<br />     $smarty-&gt;display('header.tpl',$section);<br />     $smarty-&gt;caching = false;<br />     $smarty-&gt;display('header_more.tpl');<br />     <br />     $smarty-&gt;display('sidebar_h.tpl');<br />     if($loged_in){$smarty-&gt;display('sidebar_user_data.tpl');<br />     }else{ $smarty-&gt;display('sidebar_login.tpl');}<br />     <br />     $smarty-&gt;caching = 2;$smarty-&gt;cache_lifetime = 86400;<br />     $smarty-&gt;display('sidebar_feed.tpl');<br />     $smarty-&gt;caching = false;<br />     <br />     $smarty-&gt;display('sidebar_affiliates.tpl');<br />     $smarty-&gt;display('sidebar_ads.tpl');<br />     $smarty-&gt;display('sidebar_f.tpl');<br />     <br />     if(($exclusive&amp;&amp;$loged_in)||!$exclusive){<br />     $smarty-&gt;caching = 2;$smarty-&gt;cache_lifetime = 262800;<br />     $smarty-&gt;display('content.tpl',$section);<br />     }else{$smarty-&gt;caching = false;$smarty-&gt;display('login.tpl');}<br />     $smarty-&gt;display('footer.tpl');<br />     <br />     ?&gt;     </p>     <p>&nbsp;</p> </div> <strong>/gallery.php</strong> <div class="code">   <p>&nbsp;</p><p>// Inicia la Sesion<br />     session_start();<br />     <br />     define('DPORTAL',true);<br />     <br />     require('config/config.php');<br />     <br />     // Obtener la Galeria por GET. Cada Galeria estara en un Directorio. Ej: /images/gallery/<br />     $getgallery = $_GET['gallery'];<br />     <br />     <br />     // El Directorio<br />     if(isset($getgallery)&amp;&amp;is_dir('images/gallery/$getgallery')) $directory = 'images/gallery/$getgallery';<br />     else $directory = 'images/gallery/screenshots'; // galeria por defecto<br />     <br />     <br />     // Modo de Obtener imagen. Usar el Session ID de phpBB3!!!<br />     if(isset($_GET['IMAGE'])&amp;&amp;isset($_GET['token'])){<br />     <br />     // Obtiene el Token, que son los Datos codificados<br />     $token = base64_decode($_GET['token']);<br />     <br />     // Obtiene el SID desde el Token<br />     $sid = preg_replace(&quot;/[^\/]+:/&quot;,&quot;&quot;,$token);<br />     <br />     // Obtiene el Nombre de archivo desde el Token<br />     $filename = preg_replace(&quot;/:[^\/]+/&quot;,&quot;&quot;,$token);<br />     <br />     // Obtiene la Descripcion de la misma forma<br />     $descripcion = preg_replace(&quot;/[$\w]+_/&quot;,&quot;&quot;,$filename);<br />     <br />     // Si los parametros pasados no cumplen con los requisitos, devolver Estado HTTP y detender el Script<br />     if($sid != $sessionid){ header('HTTP/1.1 403 Forbidden'); die('Access denied');}<br />     if(!is_file(&quot;$directory/$filename&quot;)){ header('HTTP/1.1 404 Not found'); die('Image does not exist');}<br />     <br />     // Inicializar la Clase para obtener imagen<br />     $image = new image(&quot;$directory/$filename&quot;,$descripcion);<br />     <br />     // Si el Parametro ORIG esta establecido, entregar la imagen original, si no, la imagen miniatura<br />     if(isset($_GET['ORIG'])) $image-&gt;imagen_original();<br />     else $image-&gt;imagen_miniatura(0.35);<br />     <br />     // Finaliza de forma segura el Script.<br />     die();<br />     }<br />     <br />     <br />     // Obtener el numero de pagina actual por GET. Si no esta declarado, el valor es &lt;1&gt;<br />     if(isset($_GET['page'])) $getpage = $_GET['page'];<br />     else $getpage = 1;<br />     <br />     // habilita la Cache de Smarty<br />     $smarty-&gt;caching = true;<br />     <br />     // Si la pagina ya esta cacheada, no realizar la obtencion.<br />     //if(!$smarty-&gt;is_cached('gallery_gallery.tpl',$getpage,$sessionid)){<br />     <br />     // Inicializa la Clase para obtener los contenidos del directorio<br />     $dirfunctions = new dirfunctions;<br />     <br />     // Obtener la Lista<br />     $dircontents = $dirfunctions-&gt;getdircontents($directory,$page,$sessionid,$imp);<br />     <br />     $numpages = $dircontents['numpages'];<br />     $numpage = $dircontents['numpage'];<br />     $list = $dircontents['list'];<br />     $title = $dircontents['title'];<br />     $imp = $dircontents['imp'];<br />     <br />     <br />     // Si el parametro 'getpage' es un numero, establece la pagina para la Plantilla<br />     if(preg_match(&quot;/[0-9]+/&quot;,$getpage)&gt;0)$smarty-&gt;assign('PAGE',$dirfunctions-&gt;page($getpage,$imp));<br />     else $smarty-&gt;assign('PAGE',1);<br />     <br />     $smarty-&gt;assign('IMAGELIST',$list);<br />     $smarty-&gt;assign('PAGES',$numpages);<br />     <br />     if($getpage&gt;0)$smarty-&gt;assign('BACKPAGE',$getpage-1);else $smarty-&gt;assign('BACKPAGE',1);<br />     if($getpage&lt;=$numpages)$smarty-&gt;assign('NEXTPAGE',$getpage+1);<br />     $smarty-&gt;assign('CURRPAGE',$getpage);<br />     $smarty-&gt;assign('IMP',$imp);<br />     //}<br />     <br />     // Salidas<br />     <br />     // Si se llama al modo AJAX (incluido en la galeria mediante AJAX)<br />     if(isset($_GET['AJAX'])&amp;&amp;isset($getpage)){<br />     <br />     // Genera la Cache cada una hora, previniendo parametros incorrectos que causen caches invaildas<br />     if($getpage&lt;=$numpages&amp;&amp;$getpage&gt;0)$smarty-&gt;caching = 2;$smarty-&gt;cache_lifetime = 3600;<br />     <br />     // Display<br />     $smarty-&gt;display('gallery_gallery.tpl',$getpage,$sessionid);die();<br />     }<br />     <br />     // Declara las variables generales de Smarty<br />     $smarty-&gt;assign('SITENAME',$sitename);<br />     $smarty-&gt;assign('TITLE',$title);<br />     <br />     <br />     // Las salidas generales<br />     <br />     $smarty-&gt;display('header.tpl',$getgallery);<br />     $smarty-&gt;display('gallery_h.tpl');<br />     $smarty-&gt;display('sidebar_h.tpl');<br />     $smarty-&gt;display('sidebar_search.tpl');<br />     // Los elementos de Usuario del Sidebar NO deben ser Cacheados<br />     if($loged_in){$smarty-&gt;display('sidebar_user_data.tpl');<br />     }else{ $smarty-&gt;display('sidebar_login.tpl');}<br />     $smarty-&gt;display('sidebar_feed.tpl');<br />     $smarty-&gt;display('sidebar_affiliates.tpl');<br />     $smarty-&gt;display('sidebar_ads.tpl');<br />     $smarty-&gt;display('sidebar_f.tpl');<br />     $smarty-&gt;display('gallery_c.tpl');<br />     $smarty-&gt;display('footer.tpl');<br />     <br />     ?&gt;</p> </div> <strong>/blog.php</strong> <div class="code">   <p>&nbsp;</p><p>// Inicia la Sesion<br />     session_start();<br />     <br />     define('DPORTAL',true);<br />     <br />     // Obtiene el archivo de Configuracion<br />     require_once('config/config.php');<br />     <br />     // Obtiene el ID por GET. Notese que el ID es el Timestamp.<br />     $get_post_id = $_GET['post_id'];<br />     <br />     // Si de ha declarado el post_id, obtener el Contenido de la Entrada<br />     if(isset($get_post_id) &amp;&amp; file_exists('entries/$get_post_id')){<br />     <br />     $get_entry = get_blog_entry($get_post_id);<br />     <br />     $title = $get_entry['title'];<br />     $content = $get_entry['title'];<br />     <br />     $smarty-&gt;assign('TITLE',$title);<br />     $smarty-&gt;assign('CONTENT',$content);<br />     <br />     // Crear una Nueva entrada<br />     }elseif(isset($_GET['NEW']) &amp;&amp; $user_admin){<br />     <br />     $new_entry = true;<br />     $smarty-&gt;assign('NEW',$new_entry);<br />     $smarty-&gt;display('blog_edit.tpl');<br />     <br />     // Editar una Entrada<br />     }elseif($_GET['EDIT'] &amp;&amp; isset($_GET['entry'])){<br />     <br />     $smarty-&gt;display('blog_edit.tpl');<br />     <br />     // Publicar/Actualizar una Entrada<br />     }elseif(isset($_GET['POST'])){<br />     <br />     // Obtener los datos por POST<br />     $id = $_POST['id'];<br />     $title = $_POST['title'];<br />     $content = $_POST['content'];<br />     $timestamp = time();<br />     $new = $_POST['new'];<br />     <br />     // Guardar/Actualizar la Entrada en el Blog<br />     if($new) $posting = blog_new_entry($timestamp,$title,$content);<br />     else $posting = blog_update_entry($id,$title,$content);<br />     <br />     // Comprobar si se ha realizado correctamente<br />     if($posting) $_SESSION['blog_entry_saved'] = true;<br />     else $_SESSION['blog_entry_error'] = true;<br />     <br />     // Redirigir a la p{agina principal<br />     header('location:/blog.php');<br />     <br />     // Publicar un Comentario<br />     }elseif(isset($_GET['POST_COMMENT'])){<br />     <br />     // Obtener los datos por POST<br />     $id = $_POST['id'];<br />     $name = $_POST['name'];<br />     $mail = $_POST['mail'];<br />     $url = $_POST['url'];<br />     $content = $_POST['content'];<br />     $timestamp = time();<br />     <br />     $posting = blog_post_comment($id,$timestamp,$name,$mail,$url,$content);<br />     <br />     if($posting) $_SESSION['blog_post_saved'] = true;<br />     <br />     // Redirigir a la pagina principal<br />     header(&quot;location:/blog.php?entry=$id&quot;);<br />     <br />     }else{<br />     <br />     $entries = get_blog_entries($blog_entries_index);<br />     $smarty-&gt;assign('ENTRIES',$entries);<br />     <br />     if($_SESSION['blog_entry_saved']) $smarty-&gt;assing('MESSAGE',&quot;Entrada publicada con &eacute;xito&quot;);<br />     if($_SESSION['blog_entry_error']) $smarty-&gt;assing('MESSAGE',&quot;Error al publicar la entrada!&quot;);<br />     if($_SESSION['blog_post_saved']) $smarty-&gt;assing('MESSAGE',&quot;Comentario con &eacute;xito&quot;);<br />     if($_SESSION['blog_post_error']) $smarty-&gt;assing('MESSAGE',&quot;Error al publicar el Comentario!&quot;);<br />     <br />     session_unset($_SESSION['blog_entry_saved']);<br />     session_unset($_SESSION['blog_entry_error']);<br />     session_unset($_SESSION['blog_post_saved']);<br />     session_unset($_SESSION['blog_post_error']);<br />     <br />     $smarty-&gt;assign('SITENAME',$sitename);<br />     $smarty-&gt;assign('TITLE','Blog');<br />     <br />     // :: Las salidas<br />     $smarty-&gt;caching = 2;$smarty-&gt;cache_lifetime = 262800;<br />     $smarty-&gt;display('header.tpl',&quot;blog_$get_post_id&quot;);<br />     $smarty-&gt;caching = false;<br />     $smarty-&gt;display('header_more.tpl');<br />     <br />     $smarty-&gt;display('sidebar_h.tpl');<br />     if($loged_in){$smarty-&gt;display('sidebar_user_data.tpl');<br />     }else{ $smarty-&gt;display('sidebar_login.tpl');}<br />     <br />     $smarty-&gt;caching = 2;$smarty-&gt;cache_lifetime = 86400;<br />     $smarty-&gt;display('sidebar_feed.tpl');<br />     $smarty-&gt;caching = false;<br />     <br />     $smarty-&gt;display('sidebar_affiliates.tpl');<br />     $smarty-&gt;display('sidebar_ads.tpl');<br />     $smarty-&gt;display('sidebar_f.tpl');<br />     //$smarty-&gt;caching = 2;$smarty-&gt;cache_lifetime = 262800;<br />     if(isset($get_post_id)) $smarty-&gt;display('blog_entry.tpl',$get_post_id);<br />     else $smarty-&gt;display('blog_index.tpl',$section);<br />     $smarty-&gt;display('footer.tpl');<br />     <br />     }<br />     <br />     ?&gt;</p> </div> <strong>/feedback.php</strong> <div class="code">   <p>&nbsp;</p><p>// Inicia la Sesion<br />     session_start();<br />     <br />     require_once('config/config.php');<br />     <br />     // String getip(void)<br />     function getip(){<br />     $ip1    = $_SERVER['REMOTE_ADDR'];<br />     $ip2    = $_SERVER[&quot;HTTP_X_FORWARDED_FOR&quot;];<br />     if($ip2==null) $ip = $ip1;<br />     else $ip = $ip = &quot;$ip1,$ip2&quot;;<br />     return $ip;<br />     }<br />     <br />     // Bool submit(string content)<br />     function submit($content,$type){<br />     <br />     $ip = getip();<br />     $file = fopen(&quot;content/.feedback&quot;,'a');<br />     flock($file,2);<br />     $output = time().&quot;,$type,\&quot;$content\&quot;,$ip\n&quot;;<br />     if(fwrite($file,$output)) return true;<br />     fclose($file);<br />     }<br />     <br />     if(isset($_GET['SUBMIT'])){<br />     $getcontent = $_POST['content'];<br />     $type = $_POST['type'];<br />     if(preg_match(&quot;/[\w\s]*/&quot;,&quot;&quot;,$content)&gt;0) submit($getcontent,$type);<br />     $_SESSION['time'] = time();<br />     <br />     header('location:feedback.php?SENDED'); die();<br />     }<br />     <br />     // Si el visitante ya envi&Atilde;&sup3; el Comentario, esperar 5 minutos antes de poder mandar otro<br />     if(isset($_SESSION['time'])){<br />     $countdown = ($_SESSION['time'] - (time()-900));<br />     $smarty-&gt;assign('COUNTDOWN',$countdown);<br />     $smarty-&gt;assign('SCOUNTDOWN',strftime(&quot;%M&quot;,$countdown));<br />     <br />     if($countdown &lt;= 0) session_unregister('time');<br />     }<br />     <br />     // La Salida<br />     $smarty-&gt;display('feedback.tpl');<br />     ?&gt;</p> </div> <strong>/sitemap.php</strong> <div class="code">   <p>&nbsp;</p><p>// Autogenerador de Sitemap XML<br />     <br />     session_start();<br />     require_once('config/config.php');<br />     <br />     // Extraer las Secciones y declarar un Array para ser mostrado secuencialmente<br />     $secs = @fopen(&quot;content/.list&quot;, &quot;r&quot;) or die('Archivo de listas inexistente');<br />     while (($data = fgetcsv($secs, 1000, &quot;;&quot;)) !== FALSE) { <br />     $name = $data[1];<br />     $timestamp = $data[4];<br />     $sections[] = array('name'=&gt;$name,'timestamp'=&gt;$timestamp);<br />     }<br />     fclose($secs);<br />     <br />     <br />     // Obtener las galerias<br />     $gal_dir = 'images/gallery';<br />     if (is_dir($gal_dir)) {<br />     if ($gal = opendir($gal_dir)) {<br />     while (($conf_gal = readdir($gal)) !== false) {<br />     if ($conf_gal != '.' &amp;&amp; $conf_gal!= '..' &amp;&amp; $conf_gal != '.htaccess'){<br />     $get_gals[] = $conf_gal;<br />     }<br />     }<br />     closedir($gal);<br />     }<br />     }<br />     <br />     header('content-type:text/xml');<br />     <br />     $smarty-&gt;assign('SECTIONS',$sections);<br />     $smarty-&gt;assign('GALLERIES',$get_gals);<br />     $smarty-&gt;display('sitemap_xml.tpl');<br />     ?&gt;</p> </div> <h3>Administraci&oacute;n: </h3> <strong>/panel.php</strong> <div class="code">   <p>&nbsp;</p><p>session_start();<br />     <br />   // Obtine la Configuracion<br />   require('config/config.php');<br />   <br />   // Si el usuario NO es Administrador (user_type = 3),<br />   // detener el Script y redirigir a un lugar apropiado<br />   if(!$user_admin){<br />   // Colocar un Estado 403 y/o redirigir<br />   header('location:'.$curr_dir.'home.html');<br />   die();<br />   }<br />   <br />   // :: Administracion de secciones<br />   <br />   // Mostrar el phpinfo()<br />   if(isset($_GET['PHPINFO'])){die(phpinfo());<br />   <br />   // Crear secci&oacute;n<br />   }elseif(isset($_GET['CREATE'])){<br />   $filename = $_POST['filename'];<br />   $title = $_POST['title'];<br />   <br />   if(!file_exists(&quot;content/$filename&quot;)<br /> &amp;&amp;preg_match(&quot;/[a-z]{3,8}/&quot;,$filename)&gt;0<br /> &amp;&amp;preg_match(&quot;/[\w\s]{3,20}/&quot;,$title)&gt;0){<br /> $list = @fopen(&quot;content/.list&quot;, &quot;a&quot;) or die('Archivo de listas inexistente');<br /> $output = &quot;0;\&quot;$filename\&quot;;\&quot;$title\&quot;;\n&quot;;<br /> if(@copy(&quot;content/.empty&quot;,&quot;content/$filename&quot;)&amp;&amp;@fwrite($list,$output)){<br />   $_SESSION['CREATED'] = true;<br />   $_SESSION['SECTION_CREATED'] = $filename; <br />   }<br />   fclose($list);<br />   }<br />   header('location:'.$curr_dir.'panel.php');<br />   die();<br />   <br />   // Borrar secci&oacute;n (no yet implemented)<br />   }elseif(isset($_GET['DELETE'])){<br />   $filename = $_POST['filename'];<br />   <br />   if($filename != 'home'){<br />   <br />   // Para obtener la Lista y reemplazar los elementos de la Lista, borrando la fila a eliminar.<br />   // Notese en la Expresion regular los dos caracteres &quot;\s&quot; al principop y al final de la expresi&oacute;n.<br />   // La primera fila es Home y no hay ning&uacute;n caracter m&aacute;s. Eso significa que Home NO puede ser<br />   // eliminado y NO DEBE, ya que es la p&Atilde;&Acirc;&iexcl;gina por defecto.<br />   $putlist = preg_replace(&quot;/\s[\w]+;\&quot;$filename\&quot;;\&quot;[\w\s]*\&quot;;(true)*\s/&quot;,&quot;\n&quot;,file_get_contents('content/.list'));<br />   <br />   // Obtener el Archivo de lista para Escritura<br />   $list = fopen('content/.list','w');<br />   flock($list,2);<br />   <br />   // Si los datos fueron borrados correctamente<br />   if(unlink(&quot;content/$filename&quot;)&amp;&amp;fwrite($list,$putlist)){<br />   $_SESSION['DELETED'] = true;<br />   $_SESSION['SECTION_DELETED'] = $filename;<br />   }<br />   fclose($list);<br />   }<br />   header('location:'.$curr_dir.'panel.php');<br />   die();<br />   <br />   // :: Administracion de Sitio<br />   <br />   // Actualizar la Configuraci&Atilde;&Acirc;&sup3;n<br />   }elseif(isset($_GET['SITE_CONF'])){<br />   $sitename = $_POST['sitename'];<br />   $site_desc = $_POST['site_desc'];<br />   $banner = $_POST['banner'];<br />   $style = $_POST['style'];<br />   <br />   // Configura la Salida<br />   $output = &quot;;Archivo de configuraci&oacute;n del Sitio\n&quot;; <br />   $output.= &quot;sitename = \&quot;$sitename\&quot;\n&quot;;<br />   $output.= &quot;sitedesc = \&quot;$site_desc\&quot;\n&quot;;<br />   $output.= &quot;banner = \&quot;$banner\&quot;\n&quot;;<br />   $output.= &quot;desc = \&quot;$style\&quot;\n&quot;;<br />   <br />   // Abre el Archivo de configuraci&oacute;n de sitio para Escritura<br />   $error = &quot;El Archivo de configuraci&oacute;n de sitio no existe o no tiene permisos de escritura&quot;;<br />   $file = fopen('config/site.ini', 'w') or die(&quot;<strong>Error fatal:</strong> $error&quot;);<br />   flock($file,2);fwrite($file,$output);fclose($file);<br />   $_SESSION['UPDATED'] = true;<br />   header('location:'.$curr_dir.'panel.php');<br />   die();<br />   <br />   <br />   // :: Modos de Actualizaci&oacute;n de elementos<br />   <br />   // Actualizar Lista de Afiliados<br />   }elseif(isset($_GET['AFF_CONF'])){<br />   <br />   $content = stripslashes($_POST['content']);<br />   $file = fopen('smarty/templates/affiliates_c.tpl','w');<br />   flock($file,2);<br />   if(fwrite($file,$content)){$_SESSION['UPDATED'] = true;<br />   }else{$_SESSION['ERROR'] = true;}<br />   fclose($file);<br />   $smarty-&gt;clear_all_cache();<br />   header('location:'.$curr_dir.'panel.php');<br />   <br />   <br />   // Actualizar Publicidad superior<br />   }elseif(isset($_GET['PUB_CONF'])){<br />   <br />   $content = stripslashes($_POST['content']);<br />   $file = fopen('smarty/templates/sup_ads_c.tpl','w');<br />   flock($file,2);<br />   if(fwrite($file,$content)){$_SESSION['UPDATED'] = true;<br />   }else{$_SESSION['ERROR'] = true;}<br />   fclose($file);<br />   $smarty-&gt;clear_all_cache();<br />   header('location:panel.php');<br />   <br />   <br />   // Actualizar Agregados del Sidebar<br />   }elseif(isset($_GET['ADS_CONF'])){<br />   <br />   $content = stripslashes($_POST['content']);<br />   $file = fopen('smarty/templates/sidebar_c.tpl','w');<br />   flock($file,2);<br />   if(fwrite($file,$content)){$_SESSION['UPDATED'] = true;<br />   }else{$_SESSION['ERROR'] = true;}<br />   fclose($file);<br />   $smarty-&gt;clear_all_cache();<br />   header('location:'.$curr_dir.'panel.php');<br />   <br />   <br />   // Actualuzar el contenido del Pie de p&Aacute;&Acirc;&iexcl;gina<br />   }elseif(isset($_GET['FOOT_CONF'])){<br />   <br />   $content = stripslashes($_POST['content']);<br />   $file = fopen('smarty/templates/footer_c.tpl','w');<br />   flock($file,2);<br />   if(fwrite($file,$content)){$_SESSION['UPDATED'] = true;<br />   }else{$_SESSION['ERROR'] = true;}<br />   fclose($file);<br />   $smarty-&gt;clear_all_cache();<br />   header('location:'.$curr_dir.'panel.php');<br />   <br />   // Limpiar la Cache de Smarty <br />   }elseif(isset($_GET['CLR_CACHE'])){<br />   $smarty-&gt;clear_all_cache();<br />   $smarty-&gt;clear_compiled_tpl(); <br />   $_SESSION['CLEANED'] = true;<br />   header('location:'.$curr_dir.'panel.php');<br />   <br />   /* // Modo de Respaldar (pronto disponible)<br />   }elseif(isset($_GET['BACKUP'])){<br />   backup_content();<br />   <br />   <br />   // Modo de Restaurar un backup<br />   }elseif(isset($_GET['RESTORE'])){<br />   <br />   $file = $_POST['file'];<br />   restore_content($file);<br />   }<br />   <br />   */<br />   <br />   // Modo normal<br />   }else{<br />   <br />   if($_SESSION['CREATED']){<br />   $section = $_SESSION['SECTION_CREATED'];<br />   $message = &quot;Secci&oacute;n \&quot;$section\&quot; creada con &eacute;xito. &quot;;<br />   $message.= &quot;Editar&quot;; <br />   <br />   }elseif($_SESSION['DELETED']){<br />   $section = $_SESSION['SECTION_DELETED'];<br />   $message = &quot;Secci&oacute;n \&quot;$section\&quot; borrada con &eacute;xito.&quot;;<br />   <br />   }elseif($_SESSION['UPDATED']){<br />   $message = &quot;Configuraci&oacute;n actualizada con &eacute;xito.&quot;;<br />   <br />   }elseif($_SESSION['CLEANED']){<br />   $message = &quot;Cache borrada con &eacute;xito.&quot;; <br />   <br />   }elseif($_SESSION['ERROR']){<br />   $message = &quot;Error al actualizar los datos. Probablemente hayas enviado una solicitud no&quot;;<br />   $message.= &quot;v&aacute;lida o has actualizado la p&aacute;gina. Revisa si los datos se han actualizado.&quot;;<br />   }<br />   <br />   // Si se ha declarado un Mensaje. Si no, no se mostrar&aacute; ning&uacute;n mensaje (por defecto)<br />   if(isset($message)){$smarty-&gt;assign('MESSAGE',$message);}<br />   session_unregister('UPDATED');<br />   session_unregister('CREATED');<br />   session_unregister('SECTION_CREATED');<br />   session_unregister('DELETED');<br />   session_unregister('SECTION_DELETED');<br />   session_unregister('CLEANED'); <br />   session_unregister('ERROR');<br />   <br />   <br />   // Extraer las Secciones y declarar un Array para ser mostrado secuencialmente<br />   $secs = @fopen(&quot;content/.list&quot;, &quot;r&quot;) or die('Archivo de listas inexistente');<br />   while (($data = fgetcsv($secs, 1000, &quot;;&quot;)) !== FALSE) { <br />   $name = $data[1];<br />   $title = $data[2];<br />   $sections[] = array('name'=&gt;$name,'title'=&gt;$title);<br />   }<br />   fclose($secs);<br />   <br />   $smarty-&gt;assign('SITENAME',$sitename);<br />   $smarty-&gt;assign('DESCRIPTION',$description);<br />   $smarty-&gt;assign('SECTIONS',$sections);<br />   <br />   $smarty-&gt;assign('ADS',file_get_contents('smarty/templates/sup_ads_c.tpl'));<br />   $smarty-&gt;assign('SIDEBAR',file_get_contents('smarty/templates/sidebar_c.tpl'));<br />   $smarty-&gt;assign('FOOTER',file_get_contents('smarty/templates/footer_c.tpl'));<br />   $smarty-&gt;assign('AFFILIATES',file_get_contents('smarty/templates/affiliates_c.tpl')); <br />   <br />   $smarty-&gt;display('panel.tpl');<br />   }<br />   ?&gt;</p> </div> <strong>/edit.php (actualizado)<br /> </strong> <div class="code">   <p>&nbsp;</p><p>session_start();<br />     <br />   // Obtine la Configuracion<br />   require('config/config.php');<br />   <br />   // Si el usuario NO es Administrador (user_type = 3),<br />   // detener el Script y redirigir a un lugar apropiado<br />   if(!$user_admin){<br />   // Colocar un Estado 403 y/o redirigir<br />   header('location:/index.php?seccion=home');<br />   die();<br />   }<br />   <br />   // Comienza la Aplicacion<br />   $file = $_GET['file'];<br />   <br />   // Modo de lectura y edicion del Archivo<br />   if(is_writable(&quot;content/$file&quot;)&amp;&amp;is_file(&quot;content/$file&quot;)&amp;&amp;isset($file)){<br />   $content = file_get_contents(&quot;content/$file&quot;);<br />   <br />   $list = @fopen(&quot;content/.list&quot;, &quot;r&quot;) or die('Archivo de listas inexistente');<br />   while (($data = fgetcsv($list, 1000, &quot;;&quot;)) !== FALSE) { <br />   if($data[1] == $file){<br />   $title = $data[2];<br />   $exclusive = $data[3];<br />   $category = $data[0];<br />   }<br />   }<br />   fclose($list);<br />   <br />   $smarty-&gt;assign('SITENAME',$sitename);<br />   $smarty-&gt;assign('TITLE',$title);<br />   $smarty-&gt;assign('CONTENT',$content);<br />   $smarty-&gt;assign('FILENAME',$file);<br />   $smarty-&gt;assign('EXCLUSIVE',$exclusive);<br />   //$smarty-&gt;assign('CATEGORY',$category); <br />   $smarty-&gt;assign('SID',$user-&gt;data['session_id']);<br />   <br />   $smarty-&gt;display('editor_h.tpl'); <br />   $smarty-&gt;display('editor_f.tpl'); <br />   <br />   <br />   // Modo de Guardado de Archivo<br />   }elseif(is_writable('content/'.$_POST['file'])&amp;&amp;isset($_GET['SAVE'])){<br />   <br />   $filename = $_POST['file'];<br />   $title = $_POST['title'];<br />   $content = $_POST['content'];<br />   $exclusive = $_POST['exclusive'];<br />   $category = $_POST['category'];<br />   $timestamp = time();<br />   <br />   $list_update = &quot;0;$filename;\&quot;$title\&quot;;$exclusive;$timestamp&quot;;<br />   <br />   $regex_find         = &quot;/[0-9]*;$filename;\&quot;[\w\W]*\&quot;;[1]*;[0-9]*/&quot;;<br />   $regex_replace_for  = &quot;0;$filename;\&quot;$title\&quot;;$exclusive;$timestamp&quot;;<br />   <br />   $get_list = file_get_contents('content/.list');<br />   $put_list = preg_replace($regex_find,$regex_replace_for,$get_list);<br />   <br />   <br />   $output = preg_replace(&quot;/..\/editor\//&quot;,$curr_dir.'editor/',<br />   preg_replace(&quot;/target=\&quot;[_\w]+\&quot;/&quot;,&quot;rel=\&quot;external\&quot;&quot;,stripslashes($content)));<br />   <br />   // Abre el Archivo, lo guarda y cierra (implica que existe)<br />   $file = fopen(&quot;content/$filename&quot;,'w');<br />   $list = fopen(&quot;content/.list&quot;,'w');<br />   flock($file,2);<br />   flock($list,2); <br />   if(fwrite($file,$output)&amp;&amp;fwrite($list,$put_list)){<br />   $_SESSION['SAVED'] = true;<br />   $_SESSION['section'] = $filename;<br />   } <br />   fclose($file);<br />   fclose($list); <br />   <br />   $smarty-&gt;clear_cache('content.tpl',$filename);<br />   <br />   header('location:/edit.php?SAVED');<br />   <br />   <br />   // Modo de confirmacion si ha sido guardado o no<br />   }elseif(isset($_GET['SAVED'])){<br />   $smarty-&gt;assign('UPDATED',$_SESSION['SAVED']);<br />   $smarty-&gt;assign('SECTION',$_SESSION['section']);<br />   $smarty-&gt;assign('SITENAME',$sitename); <br />   $smarty-&gt;display('saved.tpl');<br />   session_unregister('SAVED');<br />   session_unregister('section');<br />   }else{<br />   // Usar un mensaje mas completo<br />   die(&quot;Archivo inexistente&quot;);<br />   }?&gt; </p> </div> <h3>Configuraciones: </h3> <strong>/config/config.php (actualizado)</strong> <div class="code">   <p>&nbsp;</p><p>// :: Configuracion global<br />     <br />   // Expresiones regulares para uso de filtrado general<br />   require_once('includes/regular_expressions.php');<br />   <br />   //require_once(&quot;includes/functions.php&quot;);<br />   <br />   if ($functdir = opendir('includes/functions')) {<br />   while (false !== ($file = readdir($functdir))) {<br />   if($file != &quot;.&quot; &amp;&amp; $file != &quot;..&quot;) require_once(&quot;includes/functions/$file&quot;);<br />   }<br />   }<br />   <br />   <br />   // :: Librerias<br />   <br />   // Smarty<br />   <br />   // Configuracion de Smarty. Editar solo la ruta de instalacion de Smarty!<br />   define('SMARTY_DIR','libs/smarty/');<br />   require(SMARTY_DIR.&quot;Smarty.class.php&quot;);<br />   <br />   $smarty = new Smarty();<br />   <br />   // Configuracion de los directorios.<br />   // Hacen referencia al Directorio actual del Script principal y estan protegidos<br />   $smarty-&gt;template_dir = &quot;smarty/templates/&quot;;<br />   $smarty-&gt;compile_dir = 'smarty/templates_c';<br />   $smarty-&gt;cache_dir = 'smarty/cache';<br />   $smarty-&gt;config_dir = 'smarty/configs';<br />   <br />   // Delimitadores que usara Smarty reemplazando a los que son por defecto<br />   $smarty-&gt;left_delimiter = '{{';<br />   $smarty-&gt;right_delimiter = '}}';<br />   <br />   // Plantilla de Debug<br />   $smarty-&gt;debug_tpl = &quot;/home/www/dportal.mywebcommunity.org/smarty/templates/debug.tpl&quot;;<br />   <br />   // Ruta de la Clase principal FPDF<br />   //$fpdf_path = &quot;includes/fpdf/&quot;;<br />   <br />   <br />   // :: Obtener la Configuracion<br />   <br />   // Obtiene los valores del Archivo de configuraci&oacute;n<br />   $conf = parse_ini_file(&quot;site.ini&quot;) or die<br />   ('<strong>Error fatal:</strong> Archivo de configuraci&oacute;n inexistente o formato incorrecto');<br />   <br />   $sitename = $conf[sitename]; // Nombre del Sitio<br />   $description = $conf[sitedesc]; // Descripcion del Sitio<br />   $phpbb_dir = $conf[phpbb_dir]; // Ruta a phpBB3 (null si no se utiliza)<br />   $smarty_debug_mode = $conf[smarty_debug_mode];<br />   $user = $conf[user];<br />   $password = $conf[password];<br />   <br />   <br />   // Usar el Modo Debug de Smarty (1 true, 2 URL, 0 o false, no usar Debug)<br />   if($$smarty_debug_mode == 1) $smarty-&gt;debugging = true;<br />   elseif($smarty_debug_mode == 2) $smarty-&gt;debugging_ctrl = &quot;URL&quot;;<br />   <br />   // :: Integracion con elementos externos<br />   <br />   // Usar phpBB para administrar. Si no, se usar la funcion integrada<br />   if(is_dir($phpbb_dir) &amp;&amp; $phpbb_dir != null) require_once(&quot;includes/phpbb3.php&quot;);<br />   else{<br />   <br />   $user_admin = $_SESSION['is_admin'];<br />   <br />   if($user_admin){<br />   $smarty-&gt;assign('LOGED_IN',$user_admin);<br />   $smarty-&gt;assign('IS_ADMIN',$user_admin);<br />   $smarty-&gt;assign('PHPBB_USERNAME','Administrator');<br />   }<br />   <br />   if(isset($_GET['LOGIN']) &amp;&amp; !$is_admin){<br />   <br />   $get_user = $_POST['username'];<br />   $get_pass = $_POST['password'];<br />   <br />   if(auth_login($get_user,$get_pass)){<br />   <br />   $_SESSION['is_admin'] = true;<br />   $_SESSION['loged_in'] = true;<br />   <br />   }else{<br />   <br />   $_SESSION['not_loged_in'] = true;<br />   }<br />   <br />   header('location:index.php?seccion=home');die();<br />   <br />   }elseif(isset($_GET['LOGOUT']) &amp;&amp; $is_admin){<br />   <br />   session_destroy();<br />   header('location:index.php?seccion=home');die();<br />   }<br />   }<br />   <br />   // Feed reader<br />   //if(!$smarty-&gt;is_cached('sidebar_feed.tpl')){include('feed.php');}</p>   <p>?&gt; </p> </div> <strong>/config/site.ini.sample</strong> <div class="code">; Archivo de configuracion del Sitio<br />     <br />   ; STRING Nombre del Sitio Web<br />   sitename = &quot;DPortal CMS&quot;<br />   <br />   ; STRING Descripcion del Sitio<br />   sitedesc = &quot;CMS sin base de datos, ligero y f&aacute;cil de instalar, escrito en PHP, y GPL&quot;<br />   <br />   ; STRING URL del banner (no implementado)<br />   banner = &quot;&quot;<br />   <br />   ; STRING URL del Foro phpBB3. Dejar en blanco o null para no usar<br />   phpbb_dir = &quot;foro&quot;;string Usuario y Contrase&ntilde;a (este &uacute;ltimo encriptado) (foo y bar)user = &quot;foo&quot;password = &quot;62cdb7020ff920e5aa642c3d4066950dd1f01f4d&quot;<br />   <br />   ; INTEGER Modo de Debug de Smarty. 1 = Usar; 2 = URL, cualquier otro valor (0, null, etc) NO usar Debug.<br />   smarty_debug_mode = 2<br /> </div> <strong>/includes/phpbb3.php (en parte de otro desarrollador)</strong> <div class="code">   <p>&nbsp;</p><p>define('IN_PHPBB', true); // se dice que se usa el phpbb. <br />     $phpbb_root_path = '/home/www/dportal.mywebcommunity.org/foro/'; // direccion directa del servidor a tu phpBB <br />     $phpbb_url_path = 'http://'.$_SERVER['SERVER_NAME'].'/foro/'; // la url tu phpbb3 <br />     $phpEx = substr(strrchr(__FILE__, '.'), 1); // extension <br />     include($phpbb_root_path . 'common.' . $phpEx); // se incluye common.php<br />     include($phpbb_root_path . 'config.' . $phpEx); //se incluye para la info de tu base de datos como conexion, etc<br />     //include($phpbb_root_path . 'includes/functions_display.' . $phpEx);<br />     //include($phpbb_root_path . 'includes/bbcode.' . $phpEx);<br />     // iniciamos sesion <br />     $user-&gt;session_begin(); <br />     $auth-&gt;acl($user-&gt;data); <br />     $user-&gt;setup();<br />     <br />     // Si el usuario ha iniciado sesion<br />     if($user-&gt;data['is_registered']){ <br />     $loged_in = TRUE;<br />     $smarty-&gt;assign('LOGED_IN',TRUE);<br />     <br />     // Si el usuario en cuestion es Administrador<br />     if($user-&gt;data['user_type']){<br />     $user_admin = TRUE;<br />     $smarty-&gt;assign('IS_ADMIN',TRUE);<br />     }<br />     }<br />     <br />     $userid = $user-&gt;data['user_id'];<br />     $username = $user-&gt;data['username'];<br />     $sessionid = $user-&gt;data['session_id'];<br />     <br />     // Smarty<br />     $smarty-&gt;assign('PHPBB_URL_PATH',$phpbb_url_path);<br />     $smarty-&gt;assign('PHPBB_USER_ID',$userid);<br />     $smarty-&gt;assign('PHPBB_USERNAME',$username);<br />     $smarty-&gt;assign('PHPBB_SESSION_ID',$sessionid);<br />     <br />     ?&gt;</p> </div> <h3>Funciones: </h3> <strong>/includes/cunctions/functions.php</strong> <div class="code">   <p>&nbsp;</p><p>// array getlist(string section)<br />     function getlist($section){<br />     // Obtiene los datos de la Lista (archivo CSV)<br />     $list = @fopen(&quot;content/.list&quot;, &quot;r&quot;) or die('Archivo de listas inexistente');<br />     <br />     while (($data = fgetcsv($list, 1000, &quot;;&quot;)) !== FALSE) {<br />     if($data[1] == $section) return array('title'=&gt;$data[2],'exclusive'=&gt;$data[3],'timestamp'=&gt;$data[4]);<br />     }<br />     fclose($list);<br />     }<br />     <br />     // Smarty_variables getcontent(string section, string title, string content, bool esclusive, int timestamp)<br />     function getcontent($section,$title,$exclusive,$timestamp){<br />     <br />     global $smarty; global $sitename; global $description; global $loged_in;<br />     <br />     // Si NO se ha iniciado sesi&oacute;n, No se obtendr&aacute; el contenido de la Secci&oacute;n<br />     if(($exclusive&amp;&amp;$loged_in)||!$exclusive){<br />     if(!$smarty-&gt;is_cached('content.tpl',$section)){<br />     $content = fopen(&quot;content/$section&quot;,'r');<br />     $filesize = filesize(&quot;content/$section&quot;);<br />     $readed = true;<br />     }<br />     }<br />     <br />     // Declara las variables generales de Smarty<br />     $smarty-&gt;assign('SITENAME',$sitename);<br />     $smarty-&gt;assign('SITE_DESCRIPTION',$description);<br />     $smarty-&gt;assign('TITLE',$title);<br />     //$smarty-&gt;assign('SUP_ADS',$getsidebar['sup_ads']);<br />     if(!$smarty-&gt;is_cached('content.tpl',$section)){<br />     if($readed) $smarty-&gt;assign('CONTENT',@fread($content,$filesize));@fclose($content);}<br />     <br />     // Aplica la Cabecera del Actualizaci&oacute;n de la p&aacute;gina<br />     $last_mod = gmdate(&quot;D, d M Y H:i:s&quot;, $timestamp);<br />     header(&quot;Last-Modified: $last_mod GMT&quot;);<br />     }<br />     <br />     // Smarty_vars get404(string section)<br />     function get404($section){<br />     <br />     global $smarty; global $getsidebar; global $sitename; global $description;<br />     <br />     // Las declaraciones de variables ocurrir&Atilde;&iexcl;n s&Atilde;&sup3;lo una vez en funci&Atilde;&sup3;n<br />     // de la Cache de Plantilla, para acelerar la descarga de p&Atilde;&iexcl;ginas.<br />     if(!$smarty-&gt;is_cached('404.tpl',$section)){<br />     <br />     $title = 'No encontrado';<br />     <br />     // Declara las variables generales de Smarty<br />     $smarty-&gt;assign('SITENAME',$sitename);<br />     $smarty-&gt;assign('SITE_DESCRIPTION',$description);<br />     $smarty-&gt;assign('TITLE',$title);<br />     $smarty-&gt;assign('SECTION',$section); <br />     }<br />     }<br />     <br />     // string getvideolist(string video)<br />     function getvideolist($video){<br />     $list = @fopen(&quot;videos/.list&quot;, &quot;r&quot;) or die('Archivo de listas inexistente');<br />     while (($data = fgetcsv($list, 1000, &quot;;&quot;)) !== FALSE) { <br />     if($data[0] == $video){<br />     return $data[1];<br />     }<br />     }<br />     fclose($list);<br />     }<br />     <br />     // file getvideo(string video, string sid)<br />     function getvideo($video,$sid){<br />     <br />     global $sessionid;<br />     <br />     if($sid != $sessionid) die('Access denied');<br />     $getvideo = fopen(&quot;videos/$video&quot;,'r');<br />     header('content-type:video/f-flv');<br />     fpassthru($getvideo); fclose($getvideo);<br />     }<br />     <br />     // file getvideohq(string video, string sid)<br />     function getvideohq($video,$sid){<br />     <br />     global $sessionid;<br />     <br />     if($sid != $sessionid) die('Access denied');<br />     $getvideo = fopen(&quot;videos/$video_hq&quot;,'r');<br />     header('content-type:video/f-flv');<br />     fpassthru($getvideo); fclose($getvideo);<br />     }<br />     <br />     // Smarty_vars getvideohq(string video, string title)<br />     function getvideopage($video,$title){<br />     <br />     global $smarty; global $getsidebar; global $sitename;<br />     global $description;global $loged_in; global $sessionid;<br />     // Si no hay Cach&Atilde;&copy;, prodecer. Una vez que la haya,<br />     // dejar&Atilde;&iexcl; de ser procesado lo siguiente<br />     if(!$smarty-&gt;is_cached('player.tpl',$video)<br />     ||!$smarty-&gt;is_cached('player_hq.tpl',$video)){<br />     // Codifica el Nombre de Archivo y el Session ID en un Token<br />     $smarty-&gt;assign('TOKEN',urlencode(base64_encode(&quot;$video:$sessionid&quot;)));<br />     $smarty-&gt;assign('SITENAME',$sitename);<br />     $smarty-&gt;assign('SITE_DESCRIPTION',$description); <br />     $smarty-&gt;assign('TITLE',&quot;$title&quot;);<br />     $smarty-&gt;assign('VIDEO',$video);<br />     <br />     }<br />     }<br />     <br />     //string backup_content(void)<br />     function backup_content(){<br />     <br />     // Declara el Timestamp y el Directorio a respaldar (content)<br />     $time = strftime(&quot;%d-%m-%Y_%H-%M-%S&quot;,time()); $dir = '/home/digiemi/public_html/test/content/';<br />     <br />     // Declara la Clase Archive_Tar<br />     include('/home/digiemi/php/Archive/Tar.php');<br />     $obj = new Archive_Tar(&quot;/home/digiemi/public_html/test/.backup/backup_$time.tar&quot;);<br />     <br />     // Abre el Directorio<br />     $files = opendir($dir);<br />     <br />     // Crea el Array con los datos a respaldar<br />     while(false !== ($file = readdir($files))){<br />     if($file!='.htaccess' &amp;&amp; $file!='..' &amp;&amp; $file!='.') $list[$dir.$file] = $file;<br />     }<br />     closedir($files);<br />     <br />     // Crea otro array con las Claves (que ser&aacute;n los datos finales a usar)<br />     $slist = array_keys($list);<br />     <br />     // Crea el archivo TAR<br />     if($obj-&gt;create($slist)) return true;<br />     }<br />     <br />     function raw_download($filename){<br />     $file = fopen($filename,'r') or die('Archivo inexistente');<br />     header('content-type:application/octet-stream');<br />     header('header:conten-disposition:attachment; filename=&quot;$filename&quot;');<br />     fpassthru($file); fclose($file);<br />     }<br />     ?&gt;</p> </div> <strong>/includes/functions/blog.php</strong> <div class="code">   <p>&nbsp;</p><p>// Funciones para el Blog   </p>   <p>// array get_blog_entries(int blog_entries)<br />       function get_blog_entries($entries_index = 3){</p>   <p> $path = &quot;entries/&quot;;<br />     $num = 0;<br />     $handle = fopen(&quot;$path.entries&quot;, &quot;r&quot;);<br />     while (($data = fgetcsv($handle, 1000, &quot;;&quot;)) !== FALSE) {<br />     $entries[] = array('id'=&gt;$data[0],'file' =&gt;$path.$data[0],'title'=&gt;$data[1],'tags'=&gt;$data[2]);<br />     }<br />     fclose($handle);</p>   <p> // Invierte el orden<br />     rsort($entries);</p>   <p> // Devuelve la matriz<br />     return $entries;<br />     }</p>   <p>// bool blog_new_entry(string timestamp, string title, string content[,string tags])<br />     function blog_new_entry($timestamp,$title,$content, $tags = null){</p>   <p> // Crear un nuevo Archivo de Entrada (Modo Crear y escribir [x])<br />     $entrie_file = fopen(&quot;entries/$timestamp&quot;,'x') or die('Archivo de entrada ya existente! Int&amp;eacutentelo de nuevo');<br />     flock($entrie_file,LOCK_EX);<br />     if(fwrite($entrie_file,$content)) $write_file = true;<br />     fclose($entrie_file);</p>   <p> // Actualizar la Lista de entradas (Modo Append [a])<br />     $list_file = fopen('entries/.entries','a');<br />     flock($list_file,LOCK_SH);<br />     if(fwrite($list_file,&quot;$timestamp;\&quot;$title\&quot;;\&quot;$content\&quot;;\&quot;$tags\&quot;\n&quot;)) $update_list = true;<br />     fclose($list_file);</p>   <p> if($write_file &amp;&amp; $update_list) return true;<br />     }<br />       <br />     // Bool blog_update_entry(string id, string title, string content) (No yet implemented) <br />     function blog_update_entry($id,$title,$content){</p>   <p> die(&quot;$id\n$title\n$content&quot;);<br />         <br />     }</p>   <p>?&gt; </p> </div> <strong>/includes/functions/gallery.class.php</strong> <div class="code">   <p>&nbsp;</p><p>// image class image(string archivo)<br />     class image{<br />     <br />     private $archivo;<br />     private $imagen;<br />     private $dimensiones;<br />     //private $descripcion;<br />     <br />     function __construct($archivo,$descripcion){<br />     $this-&gt;archivo = $archivo;<br />     $this-&gt;descripcion = $descripcion;<br />     $this-&gt;filesize = filesize($archivo);<br />     $this-&gt;dimensiones = getimagesize($archivo);<br />     /*switch(image_type_to_mime_type($this-&gt;dimensiones)){<br />     case 'image/jpeg' : $this-&gt;imagen = imagecreatefromjpeg($archivo); break;<br />     case 'image/pjpeg' : $this-&gt;imagen = imagecreatefromjpeg($archivo); break;<br />     case 'image/gif' : $this-&gt;imagen = imagecreatefromgif($archivo); break;<br />     case 'image/png' : $this-&gt;imagen = imagecreatefrompng($archivo); break;<br />     }*/<br />     $this-&gt;imagen = imagecreatefrompng($archivo);<br />     }<br />     <br />     // image imagen_original<br />     public function imagen_original(){<br />     header('content-type:'.$this-&gt;mimetype);<br />     header(&quot;content-disposition: attachment; filename=&quot;.'&quot;'.$this-&gt;descripcion.'&quot;'.&quot;\n\n&quot;);<br />     /*switch(image_type_to_mime_type($this-&gt;dimensiones)){<br />     case 'image/jpeg' : $this-&gt;imagen = imagecreatefromjpeg($archivo); break;<br />     case 'image/pjpeg' : $this-&gt;imagen = imagecreatefromjpeg($archivo); break;<br />     case 'image/gif' : $this-&gt;imagen = imagecreatefromgif($archivo); break;<br />     case 'image/png' : $this-&gt;imagen = imagecreatefrompng($archivo); break;<br />     }*/<br />     imagejpeg($this-&gt;imagen);<br />     }<br />     <br />     // image imagenminiatura(float multip)<br />     public function imagen_miniatura($multip){<br />     header('content-type:'.$this-&gt;mimetype);<br />     header (&quot;content-disposition: attachment; filename=&quot;.'&quot;'.$this-&gt;descripcion.'&quot;'.&quot;\n\n&quot;); <br />     $dimensionx = $this-&gt;dimensiones[0] * $multip;<br />     $dimensiony = $this-&gt;dimensiones[1] * $multip;<br />     $this-&gt;miniatura = imagecreatetruecolor($dimensionx,$dimensiony);<br />     @imagecopyresampled($this-&gt;miniatura,$this-&gt;imagen,0,0,0,0,$dimensionx,$dimensiony,<br />     $this-&gt;dimensiones[0],$this-&gt;dimensiones[1]);<br />     header('content-type:'.$this-&gt;mimetype);<br />     if($this-&gt;filetype=='gif')imagegif($this-&gt;miniatura);<br />     elseif($this-&gt;filetype=='jpeg'||$this-&gt;filetype=='pjpeg')imagejpeg($this-&gt;miniatura);<br />     elseif($this-&gt;filetype=='png')imagepng($this-&gt;miniatura);<br />     elseif($this-&gt;filetype=='gif')imagegif($this-&gt;miniatura);<br />     else imagejpeg($this-&gt;miniatura);<br />     }<br />     }<br />     <br />     class dirfunctions{<br />     <br />     // Funcion para leer el contenido del directorio<br />     <br />     // array getdircontents(string directory, int page, int images_per_page)<br />     function getdircontents($directory,$page,$sessionid,$mp) {<br />     <br />     // Abre y lee el contenido del Directorio<br />     $descriptor = @opendir($directory) or die<br />     ('<strong>Error fatal:</strong> Directorio no existe o no es un directorio v&aacute;lido');<br />     <br />     // Si el Archivo de configuracion de Galeria existe<br />     if(file_exists(&quot;$directory/.name&quot;)){<br />     $getgalconf = file_get_contents(&quot;$directory/.name&quot;);<br />     $gettitle = preg_replace(&quot;/[\&quot;]*;[0-9]+/&quot;,&quot;&quot;,$getgalconf);<br />     $getimp = preg_replace(&quot;/[\w\W]*;/&quot;,&quot;&quot;,$getgalconf);<br />     }else die('Error fatal: Falta el archivo de configuraci&oacute; de la Galer&iacute;a');<br />     <br />     // Comprueba si los datos recibidos son validos y<br />     // si el &quot;imp&quot; es mayor que un valor razonable (5)<br />     if(!preg_match(&quot;/[\w\s]+/&quot;,$gettitle)&gt;0 || !preg_match(&quot;/[1-9]+/&quot;,$getimp)&gt;0 || $getimp&lt;5) die<br />     ('<strong>Error fatal:</strong> Formato de configuraci&oacute;n de Galer&iacute;a incorrecto');<br />     <br />     // Obtiene los datos para las Imagenes hacia un Array<br />     while ($entrada = readdir($descriptor)){<br />     <br />     // Elimina las entradas que no corresponden a Archivos regulares, y archivos &quot;.ht&quot;<br />     if(is_file(&quot;$directory/$entrada&quot;)<br /> &amp;&amp;preg_match(&quot;/^.ht[a-z]+$/&quot;,$entrada)==0<br /> &amp;&amp;preg_match(&quot;/^.name$/&quot;,$entrada)==0){<br />     <br />     // Declara el Nombre de archivo a apuntar, que son la Entrada y el Session ID, codificados<br />     $name = urlencode(base64_encode($entrada.':'.$sessionid));<br />     <br />     // Obtiene la Descripcion, que es la parte del nombre correspondiente<br />     $desc = preg_replace(&quot;/[\w\W]+_/&quot;,&quot;&quot;,preg_replace(&quot;/\.[\w]+/&quot;,&quot;&quot;,$entrada));<br />     <br />     // Declara la Extension, para el Archivo apuntado en la URL<br />     $ext = preg_replace(&quot;/[\w\W]+\./&quot;,&quot;&quot;,$entrada);<br />     <br />     // Declara el Array de datos codificados, cuyo indice es el Nombre de archivo<br />     $list[$entrada] = array('filename'=&gt;$filename,'name'=&gt;$name,'desc'=&gt;$desc,'ext'=&gt;$ext);<br />     <br />     }<br />     }<br />     <br />     // Ordena el orden del Array en orden Ascendente (valga la redundancia xD)<br />     ksort($list);<br />     <br />     // Crea el Array ordenado<br />     foreach($list as $item)    $alist[] = array('name'=&gt;$item['name'],'ext'=&gt;$item['ext'],<br />     'desc'=&gt;$item['desc']);<br />     <br />     // Declara el umero de elementos total partido por 10<br />     $numpages = count($alist)/$getimp;<br />     <br />     // Obtiene el numero de paginas hacia un Array (el numero de imagenes partido por 10)<br />     while($num &lt;= $numpages) $numpage[] = ($num++)+1;<br />     <br />     // Devuelve un Array con los datos requeridos, los Archivos de imagen (array),<br />     // las paginas (array) y el Numero total de paginas (integer pero en realidad float)<br />     return array('list'=&gt;$alist,'numpage'=&gt;$numpage,'numpages'=&gt;$numpages,<br />     'title'=&gt;$gettitle,'imp'=&gt;$getimp);<br />     }// Fin Funcion<br />     <br />     <br />     // Funcion que Obtiene las Imagenes a desplegar,<br />     // en base al Numero de pagina (10 imagenes por pagina).<br />     <br />     // int page(int page, int images_per_page);<br />     function page($page,$imp){<br />     if($page&gt;0)    return ($page-1) * $imp; <br />     }<br />     }<br />     <br />     ?&gt;</p> </div> <strong>/includes/functions/auth.php</strong> <div class="code">   <p>&nbsp;</p><p>//:: Funciones</p>   <p>// bool auth_login(string user, string password<br />     function auth_login($get_user,$get_pass){<br />     <br />     // Usuario y Contrasena del Archivo de configuracion, definidas como Globales<br />     global $user;<br />     global $password;</p>   <p> if($get_user == $user &amp;&amp; sha1($get_pass) == $password) return true;<br />     }<br />     ?&gt;</p> </div> 	